package com.bulbview.recipeplanner.ui;

import org.springframework.stereotype.Component;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

@Component
public class MainWindow extends CustomComponent {

    private static final long serialVersionUID = 1L;
    @AutoGenerated
    private Accordion         categoriesAccordion;
    @AutoGenerated
    private HorizontalLayout  logoHorizontalLayout;
    @AutoGenerated
    private VerticalLayout    mainCentredVerticalLayout;
    @AutoGenerated
    private VerticalLayout    mainLayout;
    @AutoGenerated
    private HorizontalLayout  RecipeAndSchedulerHorizontalLayout;
    @AutoGenerated
    private Panel             recipePanel;
    @AutoGenerated
    private VerticalLayout    recipePanelVerticalLayout;
    @AutoGenerated
    private MenuBar           recipeplannerMenuBar;
    @AutoGenerated
    private Accordion         schedulerAccordion;
    @AutoGenerated
    private VerticalLayout    titleAndMenuVerticalLayout;
    @AutoGenerated
    private Label             versionLabel;

    /**
     * The constructor should first build the main layout, set the composition
     * root and then do any custom initialization.
     * 
     * The constructor will not be automatically regenerated by the visual
     * editor.
     */
    public MainWindow() {
        buildMainLayout();
        setCompositionRoot(mainLayout);
    }

    public Accordion getCategoriesAccordion() {
        return categoriesAccordion;
    }

    public Panel getRecipePanel() {
        return recipePanel;
    }

    public MenuBar getRecipeplannerMenuBar() {
        return recipeplannerMenuBar;
    }

    public Accordion getSchedulerAccordion() {
        return schedulerAccordion;
    }

    public void setApplicationLogo(final Embedded embedded) {
        embedded.setHeight("100px");
        logoHorizontalLayout.addComponent(embedded);
    }

    @AutoGenerated
    private VerticalLayout buildMainCentredVerticalLayout() {
        // common part: create layout
        mainCentredVerticalLayout = new VerticalLayout();
        mainCentredVerticalLayout.setWidth("1000px");
        mainCentredVerticalLayout.setHeight("600px");
        mainCentredVerticalLayout.setImmediate(false);
        mainCentredVerticalLayout.setMargin(false);

        // titleAndMenuVerticalLayout
        titleAndMenuVerticalLayout = buildTitleAndMenuVerticalLayout();
        mainCentredVerticalLayout.addComponent(titleAndMenuVerticalLayout);
        mainCentredVerticalLayout.setComponentAlignment(titleAndMenuVerticalLayout, new Alignment(20));

        // RecipeAndSchedulerHorizontalLayout
        RecipeAndSchedulerHorizontalLayout = buildRecipeAndSchedulerHorizontalLayout();
        mainCentredVerticalLayout.addComponent(RecipeAndSchedulerHorizontalLayout);
        mainCentredVerticalLayout.setComponentAlignment(RecipeAndSchedulerHorizontalLayout, new Alignment(20));

        return mainCentredVerticalLayout;
    }

    @AutoGenerated
    private VerticalLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new VerticalLayout();

        // top-level component properties
        setWidth("100.0%");
        setHeight("100.0%");

        // mainCentredVerticalLayout
        mainCentredVerticalLayout = buildMainCentredVerticalLayout();
        mainLayout.addComponent(mainCentredVerticalLayout);
        mainLayout.setComponentAlignment(mainCentredVerticalLayout, new Alignment(20));

        // versionLabel
        versionLabel = new Label();
        versionLabel.setWidth("-1px");
        versionLabel.setHeight("-1px");
        versionLabel.setValue("Version: 1.0.0");
        versionLabel.setImmediate(false);
        mainLayout.addComponent(versionLabel);
        mainLayout.setComponentAlignment(versionLabel, new Alignment(24));

        return mainLayout;
    }

    @AutoGenerated
    private HorizontalLayout buildRecipeAndSchedulerHorizontalLayout() {
        // common part: create layout
        RecipeAndSchedulerHorizontalLayout = new HorizontalLayout();
        RecipeAndSchedulerHorizontalLayout.setWidth("100.0%");
        RecipeAndSchedulerHorizontalLayout.setHeight("400px");
        RecipeAndSchedulerHorizontalLayout.setImmediate(false);
        RecipeAndSchedulerHorizontalLayout.setMargin(true);
        RecipeAndSchedulerHorizontalLayout.setSpacing(true);

        // categoriesAccordion
        categoriesAccordion = new Accordion();
        categoriesAccordion.setWidth("300px");
        categoriesAccordion.setHeight("100.0%");
        categoriesAccordion.setImmediate(false);
        RecipeAndSchedulerHorizontalLayout.addComponent(categoriesAccordion);
        RecipeAndSchedulerHorizontalLayout.setComponentAlignment(categoriesAccordion, new Alignment(20));

        // recipePanel
        recipePanel = buildRecipePanel();
        RecipeAndSchedulerHorizontalLayout.addComponent(recipePanel);
        RecipeAndSchedulerHorizontalLayout.setExpandRatio(recipePanel, 100.0f);
        RecipeAndSchedulerHorizontalLayout.setComponentAlignment(recipePanel, new Alignment(20));

        // schedulerAccordion
        schedulerAccordion = new Accordion();
        schedulerAccordion.setWidth("300px");
        schedulerAccordion.setHeight("100.0%");
        schedulerAccordion.setImmediate(false);
        RecipeAndSchedulerHorizontalLayout.addComponent(schedulerAccordion);
        RecipeAndSchedulerHorizontalLayout.setComponentAlignment(schedulerAccordion, new Alignment(20));

        return RecipeAndSchedulerHorizontalLayout;
    }

    @AutoGenerated
    private Panel buildRecipePanel() {
        // common part: create layout
        recipePanel = new Panel();
        recipePanel.setWidth("300px");
        recipePanel.setHeight("100.0%");
        recipePanel.setImmediate(false);

        // recipePanelVerticalLayout
        recipePanelVerticalLayout = new VerticalLayout();
        recipePanelVerticalLayout.setWidth("100px");
        recipePanelVerticalLayout.setHeight("-1px");
        recipePanelVerticalLayout.setImmediate(false);
        recipePanelVerticalLayout.setMargin(true);
        recipePanel.setContent(recipePanelVerticalLayout);

        return recipePanel;
    }

    @AutoGenerated
    private VerticalLayout buildTitleAndMenuVerticalLayout() {
        // common part: create layout
        titleAndMenuVerticalLayout = new VerticalLayout();
        titleAndMenuVerticalLayout.setWidth("-1px");
        titleAndMenuVerticalLayout.setHeight("-1px");
        titleAndMenuVerticalLayout.setImmediate(false);
        titleAndMenuVerticalLayout.setMargin(false);

        // logoHorizontalLayout
        logoHorizontalLayout = new HorizontalLayout();
        logoHorizontalLayout.setWidth("-1px");
        logoHorizontalLayout.setHeight("-1px");
        logoHorizontalLayout.setImmediate(false);
        logoHorizontalLayout.setMargin(false);
        titleAndMenuVerticalLayout.addComponent(logoHorizontalLayout);
        titleAndMenuVerticalLayout.setComponentAlignment(logoHorizontalLayout, new Alignment(48));

        // recipeplannerMenuBar
        recipeplannerMenuBar = new MenuBar();
        recipeplannerMenuBar.setWidth("1000px");
        recipeplannerMenuBar.setHeight("50px");
        recipeplannerMenuBar.setImmediate(false);
        titleAndMenuVerticalLayout.addComponent(recipeplannerMenuBar);
        titleAndMenuVerticalLayout.setComponentAlignment(recipeplannerMenuBar, new Alignment(48));

        return titleAndMenuVerticalLayout;
    }

}

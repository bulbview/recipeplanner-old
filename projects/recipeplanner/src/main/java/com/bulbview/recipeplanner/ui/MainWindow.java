package com.bulbview.recipeplanner.ui;

import org.springframework.stereotype.Component;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.VerticalLayout;

@Component
public class MainWindow extends CustomComponent {
    
    @AutoGenerated
    private VerticalLayout    mainLayout;
    
    @AutoGenerated
    private Label             versionLabel;
    
    @AutoGenerated
    private VerticalLayout    mainCentredVerticalLayout;
    
    @AutoGenerated
    private HorizontalLayout  recipeAndSchedulerHorizontalLayout;
    
    @AutoGenerated
    private VerticalLayout    schedulerVerticalLayout;
    
    @AutoGenerated
    private Accordion         schedulerAccordion;
    
    @AutoGenerated
    private VerticalLayout    schedulerSpacerLayout;
    
    @AutoGenerated
    private PopupDateField    startPopupDateField;
    
    @AutoGenerated
    private Panel             recipePanel;
    
    @AutoGenerated
    private VerticalLayout    recipePanelVerticalLayout;
    
    @AutoGenerated
    private VerticalLayout    verticalLayout_2;
    
    @AutoGenerated
    private VerticalLayout    verticalLayout_3;
    
    @AutoGenerated
    private Accordion         categoriesAccordion;
    
    @AutoGenerated
    private VerticalLayout    titleAndMenuVerticalLayout;
    
    @AutoGenerated
    private MenuBar           recipeplannerMenuBar;
    
    @AutoGenerated
    private HorizontalLayout  logoHorizontalLayout;
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    private static final long serialVersionUID = 1L;
    
    /**
     * The constructor should first build the main layout, set the composition
     * root and then do any custom initialization. The constructor will not be
     * automatically regenerated by the visual editor.
     */
    public MainWindow() {
        buildMainLayout();
        setCompositionRoot(mainLayout);
    }
    
    public Accordion getCategoriesAccordion() {
        return categoriesAccordion;
    }
    
    public Panel getRecipePanel() {
        return recipePanel;
    }
    
    public MenuBar getRecipeplannerMenuBar() {
        return recipeplannerMenuBar;
    }
    
    public Accordion getSchedulerAccordion() {
        return schedulerAccordion;
    }
    
    public PopupDateField getStartPopupDateField() {
        return startPopupDateField;
    }
    
    public void setApplicationLogo(final Embedded embedded) {
        embedded.setHeight("100px");
        logoHorizontalLayout.addComponent(embedded);
    }
    
    @AutoGenerated
    private VerticalLayout buildMainCentredVerticalLayout() {
        // common part: create layout
        mainCentredVerticalLayout = new VerticalLayout();
        mainCentredVerticalLayout.setImmediate(false);
        mainCentredVerticalLayout.setWidth("1000px");
        mainCentredVerticalLayout.setHeight("-1px");
        mainCentredVerticalLayout.setMargin(false);
        
        // titleAndMenuVerticalLayout
        titleAndMenuVerticalLayout = buildTitleAndMenuVerticalLayout();
        mainCentredVerticalLayout.addComponent(titleAndMenuVerticalLayout);
        mainCentredVerticalLayout.setComponentAlignment(titleAndMenuVerticalLayout, new Alignment(20));
        
        // recipeAndSchedulerHorizontalLayout
        recipeAndSchedulerHorizontalLayout = buildRecipeAndSchedulerHorizontalLayout();
        mainCentredVerticalLayout.addComponent(recipeAndSchedulerHorizontalLayout);
        mainCentredVerticalLayout.setComponentAlignment(recipeAndSchedulerHorizontalLayout, new Alignment(20));
        
        return mainCentredVerticalLayout;
    }
    
    @AutoGenerated
    private VerticalLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new VerticalLayout();
        mainLayout.setImmediate(false);
        mainLayout.setWidth("100%");
        mainLayout.setHeight("100%");
        mainLayout.setMargin(false);
        
        // top-level component properties
        setWidth("100.0%");
        setHeight("100.0%");
        
        // mainCentredVerticalLayout
        mainCentredVerticalLayout = buildMainCentredVerticalLayout();
        mainLayout.addComponent(mainCentredVerticalLayout);
        mainLayout.setComponentAlignment(mainCentredVerticalLayout, new Alignment(20));
        
        // versionLabel
        versionLabel = new Label();
        versionLabel.setImmediate(false);
        versionLabel.setWidth("-1px");
        versionLabel.setHeight("-1px");
        versionLabel.setValue("Version: 1.0.0");
        mainLayout.addComponent(versionLabel);
        mainLayout.setComponentAlignment(versionLabel, new Alignment(24));
        
        return mainLayout;
    }
    
    @AutoGenerated
    private HorizontalLayout buildRecipeAndSchedulerHorizontalLayout() {
        // common part: create layout
        recipeAndSchedulerHorizontalLayout = new HorizontalLayout();
        recipeAndSchedulerHorizontalLayout.setImmediate(false);
        recipeAndSchedulerHorizontalLayout.setWidth("100.0%");
        recipeAndSchedulerHorizontalLayout.setHeight("100.0%");
        recipeAndSchedulerHorizontalLayout.setMargin(true);
        recipeAndSchedulerHorizontalLayout.setSpacing(true);
        
        // categoriesAccordion
        categoriesAccordion = new Accordion();
        categoriesAccordion.setImmediate(false);
        categoriesAccordion.setWidth("300px");
        categoriesAccordion.setHeight("500px");
        recipeAndSchedulerHorizontalLayout.addComponent(categoriesAccordion);
        
        // recipePanel
        recipePanel = buildRecipePanel();
        recipeAndSchedulerHorizontalLayout.addComponent(recipePanel);
        recipeAndSchedulerHorizontalLayout.setExpandRatio(recipePanel, 100.0f);
        recipeAndSchedulerHorizontalLayout.setComponentAlignment(recipePanel, new Alignment(20));
        
        // schedulerVerticalLayout
        schedulerVerticalLayout = buildSchedulerVerticalLayout();
        recipeAndSchedulerHorizontalLayout.addComponent(schedulerVerticalLayout);
        
        return recipeAndSchedulerHorizontalLayout;
    }
    
    @AutoGenerated
    private Panel buildRecipePanel() {
        // common part: create layout
        recipePanel = new Panel();
        recipePanel.setImmediate(false);
        recipePanel.setWidth("300px");
        recipePanel.setHeight("500px");
        
        // recipePanelVerticalLayout
        recipePanelVerticalLayout = buildRecipePanelVerticalLayout();
        recipePanel.setContent(recipePanelVerticalLayout);
        
        return recipePanel;
    }
    
    @AutoGenerated
    private VerticalLayout buildRecipePanelVerticalLayout() {
        // common part: create layout
        recipePanelVerticalLayout = new VerticalLayout();
        recipePanelVerticalLayout.setImmediate(false);
        recipePanelVerticalLayout.setWidth("100px");
        recipePanelVerticalLayout.setHeight("-1px");
        recipePanelVerticalLayout.setMargin(true);
        
        // verticalLayout_2
        verticalLayout_2 = buildVerticalLayout_2();
        recipePanelVerticalLayout.addComponent(verticalLayout_2);
        
        return recipePanelVerticalLayout;
    }
    
    @AutoGenerated
    private VerticalLayout buildSchedulerVerticalLayout() {
        // common part: create layout
        schedulerVerticalLayout = new VerticalLayout();
        schedulerVerticalLayout.setImmediate(false);
        schedulerVerticalLayout.setWidth("-1px");
        schedulerVerticalLayout.setHeight("-1px");
        schedulerVerticalLayout.setMargin(false);
        schedulerVerticalLayout.setSpacing(true);
        
        // startPopupDateField
        startPopupDateField = new PopupDateField();
        startPopupDateField.setImmediate(false);
        startPopupDateField.setWidth("100.0%");
        startPopupDateField.setHeight("-1px");
        startPopupDateField.setInvalidAllowed(false);
        schedulerVerticalLayout.addComponent(startPopupDateField);
        schedulerVerticalLayout.setComponentAlignment(startPopupDateField, new Alignment(20));
        
        // schedulerSpacerLayout
        schedulerSpacerLayout = new VerticalLayout();
        schedulerSpacerLayout.setImmediate(false);
        schedulerSpacerLayout.setWidth("100.0%");
        schedulerSpacerLayout.setHeight("10px");
        schedulerSpacerLayout.setMargin(false);
        schedulerVerticalLayout.addComponent(schedulerSpacerLayout);
        
        // schedulerAccordion
        schedulerAccordion = new Accordion();
        schedulerAccordion.setImmediate(false);
        schedulerAccordion.setWidth("300px");
        schedulerAccordion.setHeight("455px");
        schedulerVerticalLayout.addComponent(schedulerAccordion);
        schedulerVerticalLayout.setComponentAlignment(schedulerAccordion, new Alignment(20));
        
        return schedulerVerticalLayout;
    }
    
    @AutoGenerated
    private VerticalLayout buildTitleAndMenuVerticalLayout() {
        // common part: create layout
        titleAndMenuVerticalLayout = new VerticalLayout();
        titleAndMenuVerticalLayout.setImmediate(false);
        titleAndMenuVerticalLayout.setWidth("-1px");
        titleAndMenuVerticalLayout.setHeight("-1px");
        titleAndMenuVerticalLayout.setMargin(false);
        
        // logoHorizontalLayout
        logoHorizontalLayout = new HorizontalLayout();
        logoHorizontalLayout.setImmediate(false);
        logoHorizontalLayout.setWidth("-1px");
        logoHorizontalLayout.setHeight("-1px");
        logoHorizontalLayout.setMargin(false);
        titleAndMenuVerticalLayout.addComponent(logoHorizontalLayout);
        titleAndMenuVerticalLayout.setComponentAlignment(logoHorizontalLayout, new Alignment(48));
        
        // recipeplannerMenuBar
        recipeplannerMenuBar = new MenuBar();
        recipeplannerMenuBar.setImmediate(false);
        recipeplannerMenuBar.setWidth("1000px");
        recipeplannerMenuBar.setHeight("50px");
        titleAndMenuVerticalLayout.addComponent(recipeplannerMenuBar);
        titleAndMenuVerticalLayout.setComponentAlignment(recipeplannerMenuBar, new Alignment(48));
        
        return titleAndMenuVerticalLayout;
    }
    
    @AutoGenerated
    private VerticalLayout buildVerticalLayout_2() {
        // common part: create layout
        verticalLayout_2 = new VerticalLayout();
        verticalLayout_2.setImmediate(false);
        verticalLayout_2.setWidth("-1px");
        verticalLayout_2.setHeight("-1px");
        verticalLayout_2.setMargin(false);
        
        // verticalLayout_3
        verticalLayout_3 = new VerticalLayout();
        verticalLayout_3.setImmediate(false);
        verticalLayout_3.setWidth("-1px");
        verticalLayout_3.setHeight("-1px");
        verticalLayout_3.setMargin(false);
        verticalLayout_2.addComponent(verticalLayout_3);
        
        return verticalLayout_2;
    }
    
}
